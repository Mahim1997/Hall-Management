CREATE OR REPLACE FUNCTION func_Male_or_Female(gen_type in VARCHAR2) RETURN VARCHAR2 IS
BEGIN
	IF gen_type='F' THEN RETURN 'Female';
	ELSE RETURN 'Male';
	END IF;
END ;
/



-- Procedure to find the hall head teacher_id when input is a hall_id 
create or replace FUNCTION FIND_HALL_HEAD(HALL_ID_INPUT IN VARCHAR2)
RETURN VARCHAR2 IS
	TEACHER_ID_HEAD VARCHAR2(250);
BEGIN 
	SELECT H.TEACHER_ID INTO TEACHER_ID_HEAD
	FROM TABLE_HALL_HEAD_HISTORY H
	WHERE END_DATE IS NULL 
	AND H.HALL_ID = HALL_ID_INPUT ;
	RETURN TEACHER_ID_HEAD ;
EXCEPTION 
	WHEN OTHERS THEN 
		RETURN 'NULL' ;

END;
/

-- Procedure to find the name of the hall when input given is a teacher_id, if not head then 'NULL' is returned !
create or replace FUNCTION FIND_HALL_NAME(HALL_HEAD_ID IN VARCHAR2)
RETURN VARCHAR2 IS
	HALL_NAME_TO_USE VARCHAR2(250) ;
	HALL_ID_TO_USE VARCHAR2(250); 
BEGIN 
	HALL_ID_TO_USE := 'NULL'; 
	SELECT H.HALL_ID INTO HALL_ID_TO_USE 
	FROM TABLE_HALL_HEAD_HISTORY H
	WHERE END_DATE IS NULL
	AND H.TEACHER_ID = HALL_HEAD_ID;

	HALL_NAME_TO_USE := 'NULL';

	IF HALL_ID_TO_USE = 'NULL' THEN 
		RETURN HALL_NAME_TO_USE ;
	END IF ;

	SELECT HALL_NAME INTO HALL_NAME_TO_USE
	FROM TABLE_HALL
	WHERE HALL_ID = HALL_ID_TO_USE; 

	RETURN HALL_NAME_TO_USE ;

EXCEPTION 
	WHEN OTHERS THEN 
		RETURN 'NULL';

END;
/





create or replace FUNCTION FIND_HALL_ID(T_ID IN VARCHAR2)
RETURN VARCHAR2 IS
	HALL_ID_TO_USE VARCHAR2(250); 
BEGIN 
	SELECT H.HALL_ID INTO HALL_ID_TO_USE 
	FROM TABLE_HALL_HEAD_HISTORY H
	WHERE END_DATE IS NULL
	AND H.TEACHER_ID = T_ID;

	RETURN HALL_ID_TO_USE ;

EXCEPTION 
	WHEN OTHERS THEN 
		RETURN 'NULL';

END;
/








create or replace FUNCTION FIND_MANAGED_HALL_NAME(T_ID IN VARCHAR2)
RETURN VARCHAR2 IS
	HALL_NAME_TO_USE VARCHAR2(250); 
BEGIN 
	SELECT (SELECT h2.HALL_NAME FROM TABLE_HALL h2 WHERE h2.HALL_ID=H.HALL_ID) INTO HALL_NAME_TO_USE 
	FROM TABLE_HALL_HEAD_HISTORY H
	WHERE END_DATE IS NULL
	AND H.TEACHER_ID = T_ID;

	RETURN HALL_NAME_TO_USE ;

EXCEPTION 
	WHEN OTHERS THEN 
		RETURN 'NULL';

END;
/




